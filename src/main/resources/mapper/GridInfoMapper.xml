<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.GridInfoMapper">
  <resultMap id="BaseResultMap" type="model.GridInfo">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="grid_code" jdbcType="VARCHAR" property="gridCode" />
    <result column="grid_name" jdbcType="VARCHAR" property="gridName" />
    <result column="org_code" jdbcType="BIGINT" property="orgCode" />
      <result column="org_name" jdbcType="VARCHAR" property="orgName" />
    <result column="grid_type" jdbcType="INTEGER" property="gridType" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="assist_manager" jdbcType="VARCHAR" property="assistManager" />
    <result column="supervise_manager" jdbcType="VARCHAR" property="superviseManager" />
    <result column="qr_code" jdbcType="VARCHAR" property="qrCode" />
    <result column="grid_map" jdbcType="VARCHAR" property="gridMap" />
    <result column="delete_flag" jdbcType="VARCHAR" property="deleteFlag" />
    <result column="created_at" jdbcType="BIGINT" property="createdAt" />
    <result column="updated_at" jdbcType="BIGINT" property="updatedAt" />
    <collection property="listReview" column="grid_code"   ofType="model.GridReview" select="getGridReviews" >
    </collection>
  </resultMap>
  
  <resultMap id="GridReviewResultMap" type="model.GridReview">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="grid_code" jdbcType="VARCHAR" property="gridCode" />
    <result column="grid_name" jdbcType="VARCHAR" property="gridName" />
    <result column="grid_review_name" jdbcType="VARCHAR" property="gridReviewName" />
    <result column="id_number" jdbcType="VARCHAR" property="idNumber" />
    <result column="duties" jdbcType="VARCHAR" property="duties" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    
     <result column="type" jdbcType="VARCHAR" property="type" />
      <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="created_at" jdbcType="BIGINT" property="createdAt" />
    <result column="updated_at" jdbcType="BIGINT" property="updatedAt" />
  </resultMap>
  
  
  <select id="getGridCodesByAccountIdOrOrgCode" parameterType="java.util.Map" resultType="java.lang.String">
    select grid_code
    from grid_info
    where delete_flag !=1
    <if test="accountId != null">
    and account_id = #{accountId}
    </if>
    <if test="orgCode != null">
    and org_Code   = #{orgCode}
    </if>
  </select>


  <select id="getGridinfosByAccountIdOrOrgCode" parameterType="model.GridInfo" resultMap="GridReviewResultMap">
    select grid_code,grid_name
    from grid_info
    where delete_flag !=1
    <if test="accountId != null">
     and account_id = #{accountId}
    </if>
    <if test="orgCode != null">
     and org_Code = #{orgCode}
    </if>
  </select>
  

  <select id="getGridReviews" parameterType="java.lang.String" resultMap="GridReviewResultMap">
    select *
    from grid_review gr
    where status !=1
    and gr.grid_code = #{grid_code}
  </select>

    <!--查询列表with机构名称-->
  <select id="getGridInfoList" parameterType="java.util.Map" resultType="java.util.Map">
    select gi.id as id,gu.real_name as realName , gi.grid_code as gridCode, gi.grid_name as gridName,
    gi.org_code as orgCode, gi.grid_type as gridType , gi.description as description, gi.account_id as accountId,
    gi.assist_manager as assistManager,gi.supervise_manager as superviseManager, gi.qr_code as qrCode,
    gi.grid_map as gridMap, gi.created_at as createdAt, gi.updated_at as updatedAt, org.org_name as orgName

    from grid_info gi
    left join grid_user gu  on gi.account_id=gu.account_id
    left join grid_org org on gi.org_code = org.org_code
    where 1=1
    and delete_flag !='1'
    <if test="gridCode != null">
    and gi.grid_code   like CONCAT('%',#{gridCode},'%')
    </if >
    <if test="gridName != null">
    and gi.grid_name  like CONCAT('%',#{gridName},'%')
    </if>
    <if test="orgCode != null">
    and gi.org_code  like CONCAT('%',#{orgCode},'%')
    </if>
    <if test="realName != null">
    and gu.real_name   like CONCAT('%',#{realName},'%')
    </if>
    <if test="accountId != null">
    and gi.account_id   = #{accountId}
    </if>
    <if test="gridType != null">
    and  gi.grid_type = #{gridType}
    </if>
    order by gi.created_at DESC
  </select>


  <sql id="Base_Column_List">
    id, grid_code, grid_name, org_code, grid_type, description, account_id, assist_manager, 
    supervise_manager, qr_code, grid_map, created_at, updated_at
  </sql>

    <!--查询with机构名称-->
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select gi.*, org.org_name
    from grid_info gi
    left join grid_org org on gi.org_code = org.org_code
    where gi.id = #{id,jdbcType=BIGINT}
  </select>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from grid_info
    where id = #{id,jdbcType=BIGINT}
  </delete>


  <insert id="insert" parameterType="model.GridInfo">
    insert into grid_info (id, grid_code, grid_name,
        org_code, grid_type, description,
        account_id, assist_manager, supervise_manager,
        qr_code, grid_map, created_at,
        updated_at)
    values (#{id,jdbcType=BIGINT}, #{gridCode,jdbcType=VARCHAR}, #{gridName,jdbcType=VARCHAR},
        #{orgCode,jdbcType=BIGINT}, #{gridType,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR},
        #{accountId,jdbcType=BIGINT}, #{assistManager,jdbcType=VARCHAR}, #{superviseManager,jdbcType=VARCHAR},
        #{qrCode,jdbcType=VARCHAR}, #{gridMap,jdbcType=VARCHAR}, #{createdAt,jdbcType=BIGINT},
        #{updatedAt,jdbcType=BIGINT})
  </insert>


  <select id="checkSameGridCode" parameterType="java.util.Map"  resultMap="BaseResultMap">
        select *
        from grid_info
        where grid_code = #{gridCode}
        <if test="id !=null">
        and id !=#{id}
        </if>
  </select>
  

  <insert id="insertSelective" parameterType="model.GridInfo">
    insert into grid_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="gridCode != null">
        grid_code,
      </if>
      <if test="gridName != null">
        grid_name,
      </if>
      <if test="orgCode != null">
        org_code,
      </if>
      <if test="gridType != null">
        grid_type,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="assistManager != null">
        assist_manager,
      </if>
      <if test="superviseManager != null">
        supervise_manager,
      </if>
      <if test="qrCode != null">
        qr_code,
      </if>
      <if test="gridMap != null">
        grid_map,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="gridCode != null">
        #{gridCode,jdbcType=VARCHAR},
      </if>
      <if test="gridName != null">
        #{gridName,jdbcType=VARCHAR},
      </if>
      <if test="orgCode != null">
        #{orgCode,jdbcType=BIGINT},
      </if>
      <if test="gridType != null">
        #{gridType,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="assistManager != null">
        #{assistManager,jdbcType=VARCHAR},
      </if>
      <if test="superviseManager != null">
        #{superviseManager,jdbcType=VARCHAR},
      </if>
      <if test="qrCode != null">
        #{qrCode,jdbcType=VARCHAR},
      </if>
      <if test="gridMap != null">
        #{gridMap,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=BIGINT},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="model.GridInfo">
    update grid_info
    <set>
      <if test="gridCode != null">
        grid_code = #{gridCode,jdbcType=VARCHAR},
      </if>
      <if test="gridName != null">
        grid_name = #{gridName,jdbcType=VARCHAR},
      </if>
      <if test="orgCode != null">
        org_code = #{orgCode,jdbcType=BIGINT},
      </if>
      <if test="gridType != null">
        grid_type = #{gridType,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="assistManager != null">
        assist_manager = #{assistManager,jdbcType=VARCHAR},
      </if>
      <if test="superviseManager != null">
        supervise_manager = #{superviseManager,jdbcType=VARCHAR},
      </if>
      <if test="qrCode != null">
        qr_code = #{qrCode,jdbcType=VARCHAR},
      </if>
      <if test="gridMap != null">
        grid_map = #{gridMap,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=BIGINT},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=BIGINT},
      </if>
      <if test="deleteFlag != null">
        delete_flag = #{deleteFlag,jdbcType=VARCHAR},
      </if>
      
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="model.GridInfo">
    update grid_info
    set grid_code = #{gridCode,jdbcType=VARCHAR},
      grid_name = #{gridName,jdbcType=VARCHAR},
      org_code = #{orgCode,jdbcType=BIGINT},
      grid_type = #{gridType,jdbcType=INTEGER},
      description = #{description,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      assist_manager = #{assistManager,jdbcType=VARCHAR},
      supervise_manager = #{superviseManager,jdbcType=VARCHAR},
      qr_code = #{qrCode,jdbcType=VARCHAR},
      grid_map = #{gridMap,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=BIGINT},
      updated_at = #{updatedAt,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>