<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.RegionMapper">

  <resultMap id="BaseResultMap" type="model.Region">
    <id column="region_code" jdbcType="BIGINT" property="regionCode" />
    <result column="region_name" jdbcType="VARCHAR" property="regionName" />
    <result column="pre_region_code" jdbcType="BIGINT" property="preRegionCode" />
    <result column="region_level" jdbcType="INTEGER" property="regionLevel" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="created_at" jdbcType="BIGINT" property="createdAt" />
    <result column="updated_at" jdbcType="BIGINT" property="updatedAt" />
  </resultMap>

  <sql id="Base_Column_List">
    region_code, region_name, pre_region_code, region_level, description, created_at, 
    updated_at
  </sql>

    <!--查看区域列表-->
    <select id="getRegionsByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from grid_region
        where pre_region_code = #{preRegionCode,jdbcType=BIGINT}
    </select>

    <!--查看区域列表BY区域名称-->
    <select id="getRegionByRegionName" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from grid_region
        where region_name = #{regionName,jdbcType=BIGINT}
    </select>


    <!--查看所有区域-->
    <select id="listRegions"  resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from grid_region
    </select>

    <!--查看区域详情-->
  <select id="getRegionByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from grid_region
    where region_code = #{regionCode,jdbcType=BIGINT}
  </select>

    <!--删除区域-->
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from grid_region
    where region_code = #{regionCode,jdbcType=BIGINT}
  </delete>

    <!--新增区域-->
  <insert id="insertSelective" parameterType="model.Region">
    insert into grid_region
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="regionCode != null">
        region_code,
      </if>
      <if test="regionName != null">
        region_name,
      </if>
      <if test="preRegionCode != null">
        pre_region_code,
      </if>
      <if test="regionLevel != null">
        region_level,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="regionCode != null">
        #{regionCode,jdbcType=BIGINT},
      </if>
      <if test="regionName != null">
        #{regionName,jdbcType=VARCHAR},
      </if>
      <if test="preRegionCode != null">
        #{preRegionCode,jdbcType=BIGINT},
      </if>
      <if test="regionLevel != null">
        #{regionLevel,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=BIGINT},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>

    <!--修改区域-->
  <update id="updateByPrimaryKeySelective" parameterType="model.Region">
    update grid_region
    <set>
      <if test="regionName != null">
        region_name = #{regionName,jdbcType=VARCHAR},
      </if>
      <if test="preRegionCode != null">
        pre_region_code = #{preRegionCode,jdbcType=BIGINT},
      </if>
      <if test="regionLevel != null">
        region_level = #{regionLevel,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=BIGINT},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=BIGINT},
      </if>
    </set>
    where region_code = #{regionCode,jdbcType=BIGINT}
  </update>

</mapper>